version: '3.7'

#####################################################################################
##  The Frontline Mattermost-0.0.3 April 2020                                       ##
##  REVIEW CONFIGURATION                                                            ##
##  A Can't Stop Columbus Project                                                   ##
##  Notes:                                                                          ##
##    * this file is configured on Docker in Swarm Mode                             ##
##    * this file is also configured to connect to Traefik reverse proxy            ## 
##    * MAKE SURE YOU UPDATE THE PROXY HOST UNDER APP LABELS                        ##
## For more details head to                                                         ##
## https://github.com/ademeglio/the-frontline/wiki/Mattermost-Setup-&-Configuration ##
##                                                                                  ##
## `docker stack deploy --with-registry-auth --resolve-image always --prune \       ##
##  --compose-file=docker-compose-frontline-production.yml frontline`               ##
#####################################################################################

x-default-opts:
  &default-opts
    logging:
      options:
       max-size: "1m"

services:

# Use official Mattermost prod-db image
  mm-db:
    image: mattermost/mattermost-prod-db:5.22.0

    environment:
      POSTGRES_USER: ${MM_DB_USERNAME}
      POSTGRES_PASSWORD: ${MM_DB_PASSWORD}
      POSTGRES_DB: mattermost
      # uncomment the following to enable backup
      #- AWS_ACCESS_KEY_ID=XXXX
      #- AWS_SECRET_ACCESS_KEY=XXXX
      #- WALE_S3_PREFIX=s3://BUCKET_NAME/PATH
      #- AWS_REGION=us-east-1

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.mattermost==true"
#          - "node.role==worker"
      
      restart_policy:
        condition: any
        delay: 2s
    
      labels:
        - "com.frontlineinfo.db=As of 4/14/2020 Postgres v9.4"

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - type: volume
        source: mattermost-db
        target: /var/lib/postgresql/data

    networks:
      - frontline-db
  
# Mattermost Application. Use official Mattermost prod-app image
  mm-app:
    image: mattermost/mattermost-prod-app:5.22.0

    environment: 
      DB_HOST: frontline_mm-db
      # talk to the port within the overlay network
      # without (over) exposing ports
      DB_PORT_NUMBER: 5432
      MM_USERNAME: ${MM_DB_USERNAME}
      MM_PASSWORD: ${MM_DB_PASSWORD}
      MM_DBNAME: mattermost
      # pass the edition to be used, default is enterprise
      # setting this env var will make the app use the team edition
      edition: team

    deploy:
      mode: replicated
      replicas: 1

      placement:
        constraints:
          - "node.labels.mattermost==true"
#          - "node.role==worker"

      restart_policy:
        condition: any
        delay: 2s
      
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.mm-app.entrypoints=web-secured"
        ######################################### UPDATE HOST ####################
        - "traefik.http.routers.mm-app.rule=Host(`connect.frontlineinfo.com`)"     ##
        ##########################################################################
        - "traefik.http.routers.mm-app.tls=true"
#        - "traefik.http.routers.mm-app.tls.certresolver=csc-staging-resolver"
        - "traefik.http.routers.mm-app.tls.certresolver=csc-production-resolver"
        - "traefik.http.services.mm-app.loadbalancer.server.port=8000"
        - "traefik.http.services.mm-app.loadbalancer.passhostheader=true"
        - "traefik.http.services.mm-app.loadbalancer.sticky=true"
    
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - type: volume
        source: mattermost-config
        target: /mattermost/config
      - type: volume
        source: mattermost-data
        target: /mattermost/data
      - type: volume
        source: mattermost-logs
        target: /mattermost/logs
      - type: volume
        source: mattermost-plugins
        target: /mattermost/plugins

    networks:
      - traefik-public
      - frontline-db

#####################################################################################
##  System
##        
#####################################################################################

networks:
  # External public network
  traefik-public:
    external: true
    name: traefik-public
  # Internal network APP <> Database
  frontline-db:
    external: true
    name: frontline-db

volumes:
  mattermost-db:
    external: true
  mattermost-config:
    external: true
  mattermost-data:
    external: true
  mattermost-logs:
    external: true
  mattermost-plugins:
    external: true